@page
@model Sotis2.Models.Graph.DTO.GraphDTO
@{
    //ViewData["Title"] = "Home page";
    //Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    body {
        color: #d3d3d3;
        font: 12pt arial;
        background-color: #ffffff;
    }

    #mynetwork {
        width: 800px;
        height: 800px;
        background-color: #fff;
    }
</style>


<div id="mynetwork"></div>
<button onclick="https://localhost:5001/api/graph/display">Load the graph</button>
<button onclick="addMode()">Change Edges</button>

<script type="text/javascript">




    var container;
    var dataf;
    var options;
    var network;
    var nodes;
    var clickedNodeId = null;


    function addMode() {
        alert("Edge changer");
        network.addEdgeMode();
    }


    fetch('/api/graph/test') //./schema
        .then((response) => {
            // Now process the JSON:
            response.json().then((data) => {
                // Log the data :  api/graph/
                console.log(data);

                nodes = data['nodes'];
                dataf = data;

                data['nodes'] = new vis.DataSet(data['nodes']);
                // Now display the graph using vis.js:
                var options = {
                    edges: {
                        arrows: {
                            to: { enabled: true },
                            from: { enabled: false }
                        }
                    },
                    manipulation: {
                        enabled: false,
                        addNode: function (data, callback) {
                            // filling in the popup DOM elements
                            console.log('add', data);
                        },
                        editNode: function (data, callback) {
                            // filling in the popup DOM elements
                            console.log('edit', data);
                        },
                        addEdge: function (data, callback) {
                            console.log('add edge', data);
                            if (data.from == data.to) {
                                var r = confirm("Do you want to connect the node to itself?");
                                if (r === true) {
                                    callback(data);
                                }
                            }
                            else {
                                callback(data);
                            }
                            // after each adding you will be back to addEdge mode
                         
                        }
                    }
                };

                var container = document.getElementById('mynetwork');

                network = new vis.Network(container, data, options);
                // var network = new vis.Network(container, data, dsoptions);

                // here you init the addEdge mode




            });
        })
        .catch((err) => {
            alert("Fetching Graph Schema Failed: " + err);
        });

    //var network = new vis.Network(container, data, options);



</script>